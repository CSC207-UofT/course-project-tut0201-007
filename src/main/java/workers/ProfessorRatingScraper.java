package workers;

import java.io.*;
import java.util.HashMap;
import java.util.Map;

import org.apache.http.HttpResponse;
import org.apache.http.client.methods.CloseableHttpResponse;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.StringEntity;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.util.EntityUtils;
import org.jsoup.Jsoup;
import org.jsoup.nodes.*;
import util.RateMyProfessorException;

import org.apache.http.client.HttpClient;
import org.apache.http.*;


public class ProfessorRatingScraper {
    private static Map<String, Double> previousScores = new HashMap<String, Double>();

    public static Double getProfessorRating(String firstName, String lastName)
            throws RateMyProfessorException {
        if (previousScores.containsKey(firstName + lastName)) {
            return previousScores.get(firstName + lastName);
        }
        String html;
        try {
            html = Jsoup.connect(
                    "https://www.ratemyprofessors.com/search/teachers?query="
                            + firstName
                            + " "
                            + lastName
                            + "&sid=U2Nob29sLTE0ODQ=")
                    .get()
                    .html();
        } catch (IOException e) {
            throw new RateMyProfessorException("RateMyProfessors webpage cannot be reached");
        }
        double rating = getRatingFromHTML(html);
        return rating;
    }

    public static double getRatingFromHTML(String html) throws RateMyProfessorException {
        Document doc = Jsoup.parse(html);
        Element teacher = doc.getElementsByClass("TeacherCard__StyledTeacherCard-syjs0d-0 dLJIlx").first();
        Double ret = -1.0;
        Boolean correctSchool = false;
        if (teacher == null) {
            throw new RateMyProfessorException("Professor not found");
        }
        System.out.println("bruh");
        for (Element e : teacher.getElementsByTag("div")) {
            if (e.className().contains("CardNumRatingNumber")) {
                ret = Double.parseDouble(e.text());
            }
            if (e.className().contains("CardSchool__School")) {
                if (e.text().equals("University of Toronto - St. George Campus")) {
                    correctSchool = true;
                }
            }
            if (correctSchool && ret != -1.0) {
                return ret;
            }
        }
        throw new RateMyProfessorException("Professor not found");
    }

    public static void main(String[] args) {
        try {
            // Generated by curl-to-java: https://fivesmallq.github.io/curl-to-java
//            String data = "{\"query\":\"query TeacherSearchResultsPageQuery(\n  $query: TeacherSearchQuery!\n  $schoolID: ID\n) {\n  search: newSearch {\n    ...TeacherSearchPagination_search_1ZLmLD\n  }\n  school: node(id: $schoolID) {\n    __typename\n    ... on School {\n      name\n    }\n    id\n  }\n}\n\nfragment TeacherSearchPagination_search_1ZLmLD on newSearch {\n  teachers(query: $query, first: 8, after: \\\"\\\") {\n    didFallback\n    edges {\n      cursor\n      node {\n        ...TeacherCard_teacher\n        id\n        __typename\n      }\n    }\n    pageInfo {\n      hasNextPage\n      endCursor\n    }\n    resultCount\n    filters {\n      field\n      options {\n        value\n        id\n      }\n    }\n  }\n}\n\nfragment TeacherCard_teacher on Teacher {\n  id\n  legacyId\n  avgRating\n  numRatings\n  ...CardFeedback_teacher\n  ...CardSchool_teacher\n  ...CardName_teacher\n  ...TeacherBookmark_teacher\n}\n\nfragment CardFeedback_teacher on Teacher {\n  wouldTakeAgainPercent\n  avgDifficulty\n}\n\nfragment CardSchool_teacher on Teacher {\n  department\n  school {\n    name\n    id\n  }\n}\n\nfragment CardName_teacher on Teacher {\n  firstName\n  lastName\n}\n\nfragment TeacherBookmark_teacher on Teacher {\n  id\n  isSaved\n}\n\",\"variables\":{\"query\":{\"text\":\"c baker\",\"schoolID\":\"U2Nob29sLTE0ODQ=\",\"fallback\":true,\"departmentID\":null},\"schoolID\":\"U2Nob29sLTE0ODQ=\"}}";
            String data = "{\"query\":\"query TeacherSearchResultsPageQuery(\\n  $query: TeacherSearchQuery!\\n  $schoolID: ID\\n) {\\n  search: newSearch {\\n    ...TeacherSearchPagination_search_1ZLmLD\\n  }\\n  school: node(id: $schoolID) {\\n    __typename\\n    ... on School {\\n      name\\n    }\\n    id\\n  }\\n}\\n\\nfragment TeacherSearchPagination_search_1ZLmLD on newSearch {\\n  teachers(query: $query, first: 8, after: \\\"\\\") {\\n    didFallback\\n    edges {\\n      cursor\\n      node {\\n        ...TeacherCard_teacher\\n        id\\n        __typename\\n      }\\n    }\\n    pageInfo {\\n      hasNextPage\\n      endCursor\\n    }\\n    resultCount\\n    filters {\\n      field\\n      options {\\n        value\\n        id\\n      }\\n    }\\n  }\\n}\\n\\nfragment TeacherCard_teacher on Teacher {\\n  id\\n  legacyId\\n  avgRating\\n  numRatings\\n  ...CardFeedback_teacher\\n  ...CardSchool_teacher\\n  ...CardName_teacher\\n  ...TeacherBookmark_teacher\\n}\\n\\nfragment CardFeedback_teacher on Teacher {\\n  wouldTakeAgainPercent\\n  avgDifficulty\\n}\\n\\nfragment CardSchool_teacher on Teacher {\\n  department\\n  school {\\n    name\\n    id\\n  }\\n}\\n\\nfragment CardName_teacher on Teacher {\\n  firstName\\n  lastName\\n}\\n\\nfragment TeacherBookmark_teacher on Teacher {\\n  id\\n  isSaved\\n}\\n\",\"variables\":{\"query\":{\"text\":\"c baker\",\"schoolID\":\"U2Nob29sLTE0ODQ=\",\"fallback\":true,\"departmentID\":null},\"schoolID\":\"U2Nob29sLTE0ODQ=\"}}";
            String result = "";
            HttpPost post = new HttpPost("https://www.ratemyprofessors.com/graphql");

            post.setHeader("User-Agent", "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:95.0) Gecko/20100101 Firefox/95.0");
            post.setHeader("Accept", "*/*");
            post.setHeader("Accept-Language", "en-CA,en-US;q=0.7,en;q=0.3");
            post.setHeader("Accept-Encoding", "gzip, deflate, br");
            post.setHeader("Referer", "https://www.ratemyprofessors.com/search/teachers?query=c%20baker&sid=U2Nob29sLTE0ODQ=");
            post.setHeader("Content-Type", "application/json");
            post.setHeader("Authorization", "Basic dGVzdDp0ZXN0");
            post.setHeader("Origin", "https://www.ratemyprofessors.com");
            post.setHeader("Connection", "keep-alive");
            post.setHeader("Cookie", "ccpa-notice-viewed-02=true");
            post.setHeader("Sec-Fetch-Dest", "empty");
            post.setHeader("Sec-Fetch-Mode", "cors");
            post.setHeader("Sec-Fetch-Site", "same-origin");

            post.setEntity(new StringEntity(data));

            try (CloseableHttpClient httpClient = HttpClients.createDefault();
                 CloseableHttpResponse response = httpClient.execute(post)) {
                result = EntityUtils.toString(response.getEntity());
            }
            System.out.println(result);

        } catch (Exception e) {
            System.out.println("pain");
        }
    }
}
